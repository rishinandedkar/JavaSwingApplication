/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package userinterface.TargetRole;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Order.Order;
import Business.Order.OrderItem;
import Business.Organization.AmazonRequestHandlingOrganization;
import Business.Organization.Organization;
import Business.Organization.TargetOrganization;
import Business.Organization.UberOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.AmazonOrderWorkRequest;
import Business.WorkQueue.BestBuyOrderWorkRequest;
import Business.WorkQueue.IkeaOrderWorkRequest;
import Business.WorkQueue.TargetOrderWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.awt.CardLayout;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;
import userinterface.BestBuyRole.ProductConfirmationBestBuyJPanel;

/**
 *
 * @author raunak
 */
public class TargetWorkAreaJPanel extends javax.swing.JPanel {

    private JPanel userProcessContainer;
    private UberOrganization organization;
    private Enterprise enterprise;
    private UserAccount account;
    private EcoSystem business;
    TargetOrganization targetSalesTeamOrganization;
    /**
     * Creates new form DoctorWorkAreaJPanel
     */
    public TargetWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, TargetOrganization targetSalesTeamOrganization, Enterprise enterprise, EcoSystem business) {
        initComponents();
        
        this.userProcessContainer = userProcessContainer;
        this.organization = organization;
        this.enterprise = enterprise;
        this.account = account;
        this.business = business;
        this.targetSalesTeamOrganization = targetSalesTeamOrganization;
        //valueLabel.setText(enterprise.getName());
        populateWorkQueueTable();
    }

   
public void populateWorkQueueTable(){
         DefaultTableModel model = (DefaultTableModel) targetWorkRequestJTable.getModel();
        
        model.setRowCount(0);
        
        
        
        for (WorkRequest work : targetSalesTeamOrganization.getWorkQueue().getWorkRequestList()){
            if(work instanceof BestBuyOrderWorkRequest){ 
            //for(Order o1 : business.getMasterOrder().getMasterOrderList()){
                for(OrderItem oi : work.getOrder().getOrderItemList()){
                  if(oi.getCategory().equals("Clothes")){
                 Object[] row = new Object[7];
                // row[0] = oi.getCategory();
                 row[0] = oi.getProductID();
                 row[1] = oi.getProductName();
                 row[2] = oi.getQuantity();
                 row[3] = oi.getPrice();
                   row[4] = work.getOrder().getArea();
                 
               row[5] = work.getOrder().getMessage();
               row [6] = work;
            model.addRow(row);
                }
           }
        }
    }
     }


    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        requestTestJButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        targetWorkRequestJTable = new javax.swing.JTable();
        sendToAmazonBtn = new javax.swing.JButton();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(174, 221, 221));
        setLayout(null);

        requestTestJButton.setFont(new java.awt.Font("American Typewriter", 1, 13)); // NOI18N
        requestTestJButton.setText("Request Products");
        requestTestJButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestTestJButtonActionPerformed(evt);
            }
        });
        add(requestTestJButton);
        requestTestJButton.setBounds(300, 350, 194, 29);

        targetWorkRequestJTable.setFont(new java.awt.Font("American Typewriter", 1, 13)); // NOI18N
        targetWorkRequestJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Product ID", "Product Name", "Price", "Quantity", "Address", "Message", "Order"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.Object.class, java.lang.Object.class, java.lang.Object.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(targetWorkRequestJTable);
        if (targetWorkRequestJTable.getColumnModel().getColumnCount() > 0) {
            targetWorkRequestJTable.getColumnModel().getColumn(0).setResizable(false);
            targetWorkRequestJTable.getColumnModel().getColumn(1).setResizable(false);
            targetWorkRequestJTable.getColumnModel().getColumn(2).setResizable(false);
            targetWorkRequestJTable.getColumnModel().getColumn(3).setResizable(false);
            targetWorkRequestJTable.getColumnModel().getColumn(4).setResizable(false);
            targetWorkRequestJTable.getColumnModel().getColumn(5).setResizable(false);
            targetWorkRequestJTable.getColumnModel().getColumn(6).setResizable(false);
        }

        add(jScrollPane1);
        jScrollPane1.setBounds(99, 240, 840, 60);

        sendToAmazonBtn.setFont(new java.awt.Font("American Typewriter", 1, 13)); // NOI18N
        sendToAmazonBtn.setText("Send to Amazon");
        sendToAmazonBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendToAmazonBtnActionPerformed(evt);
            }
        });
        add(sendToAmazonBtn);
        sendToAmazonBtn.setBounds(580, 350, 196, 29);

        jLabel1.setFont(new java.awt.Font("American Typewriter", 1, 24)); // NOI18N
        jLabel1.setText("Target Work Area");
        jLabel1.setToolTipText("");
        add(jLabel1);
        jLabel1.setBounds(424, 65, 216, 30);

        jLabel2.setIcon(new javax.swing.ImageIcon("/Users/nidhisarode/Downloads/unnamed-4.png")); // NOI18N
        add(jLabel2);
        jLabel2.setBounds(20, 20, 150, 160);
    }// </editor-fold>//GEN-END:initComponents

    private void requestTestJButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestTestJButtonActionPerformed
        
         int selectedRow = targetWorkRequestJTable.getSelectedRow();
        
        if (selectedRow < 0){
            return;
        }
        
        BestBuyOrderWorkRequest request = (BestBuyOrderWorkRequest)targetWorkRequestJTable.getValueAt(selectedRow, 6);
     
        //request.setStatus("Processing");
        
        ProductConfirmationtJPanel pcjp = new ProductConfirmationtJPanel(userProcessContainer, request);
        userProcessContainer.add("productConfirmationtJPanel", pcjp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);

        
    }//GEN-LAST:event_requestTestJButtonActionPerformed

    private void sendToAmazonBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendToAmazonBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = targetWorkRequestJTable.getSelectedRow();
        //String category = bestBuyRequestAreaConfirmationTable.getValueAt(selectedRow, 0).toString();
        int pID = Integer.parseInt(targetWorkRequestJTable.getValueAt(selectedRow, 0).toString());
        String pName = targetWorkRequestJTable.getValueAt(selectedRow, 1).toString();
        int quantity = Integer.parseInt(targetWorkRequestJTable.getValueAt(selectedRow, 2).toString());
        int totalCost = Integer.parseInt(targetWorkRequestJTable.getValueAt(selectedRow, 3).toString());
        String address = targetWorkRequestJTable.getValueAt(selectedRow, 4).toString();
        WorkRequest work = (WorkRequest) targetWorkRequestJTable.getValueAt(selectedRow, 6);
        String message = "Order ready to ship";
         TargetOrderWorkRequest
                 towr = new TargetOrderWorkRequest();
         
            // aowr.setCategory(category);
             towr.setProductID(pID);
             towr.setProductName(pName);
             towr.setQuantity(quantity);
             towr.setPrice(totalCost);
             towr.setArea(address);
             towr.setMessage(message);
             towr.setOrder(work.getOrder());
            
             
               Organization org = null;
        
        
        for (Network ntw : business.getNetworkList()){
        for (Enterprise e : ntw.getEnterpriseDirectory().getEnterpriseList())
                {
                {
                    for(Organization o : e.getOrganizationDirectory().getOrganizationList())
                    { 
                        
                      if(o instanceof AmazonRequestHandlingOrganization){
                          
                          org = o;
                          break;
                    }
                    
                   
                        
                     
                    
                }
            }
        }
        if (org!=null){
            org.getWorkQueue().getWorkRequestList().add(towr);
            account.getWorkQueue().getWorkRequestList().add(towr);
        }
        }
         JOptionPane.showMessageDialog(null, "Request sent to Amazon");
    }//GEN-LAST:event_sendToAmazonBtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton requestTestJButton;
    private javax.swing.JButton sendToAmazonBtn;
    private javax.swing.JTable targetWorkRequestJTable;
    // End of variables declaration//GEN-END:variables
}
